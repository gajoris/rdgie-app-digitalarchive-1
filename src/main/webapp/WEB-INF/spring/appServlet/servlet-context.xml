<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="org.rdgie" />
	
	<!-- Configure the multipart resolver -->
	<beans:bean id="multipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000" />
		<beans:property name="uploadTempDir" ref="uploadDirResource" />
	</beans:bean>

	<beans:bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<beans:constructor-arg>
			<beans:value>/home/john/Desktop/elfinder</beans:value>
		</beans:constructor-arg>
	</beans:bean>


	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/ProjectDB" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="developper" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>org.rdgie.digitalarchive.domain.User</beans:value>
				<beans:value>org.rdgie.digitalarchive.domain.Document</beans:value>
				
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

<!-- elfinder connector beans -->
	
		<!-- find appropriate  command executor for given command-->
	<beans:bean id="commandExecutorFactory"
		class="org.rdgie.digitalarchive.controller.executor.DefaultCommandExecutorFactory">
		<beans:property name="classNamePattern"
			value="org.rdgie.digitalarchive.controller.executors.%sCommandExecutor" />
		<beans:property name="map">
			<beans:map>
			<!-- 
				<entry key="tree">
					<beans:bean class="org.rdgie.digitalarchive.controller.executors.TreeCommandExecutor" />
				</entry>
			-->
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- FsService is often retrieved from HttpRequest -->
	<!-- while a static FsService is defined here -->
	<beans:bean id="fsServiceFactory" class="org.rdgie.digitalarchive.impl.StaticFsServiceFactory">
		<beans:property name="fsService">
			<beans:bean class="org.rdgie.digitalarchive.impl.DefaultFsService">
				<beans:property name="serviceConfig">
					<beans:bean class="org.rdgie.digitalarchive.impl.DefaultFsServiceConfig">
						<beans:property name="tmbWidth" value="80" />
					</beans:bean>
				</beans:property>
				<beans:property name="volumes">
					<beans:list>
						<!-- two volumes are mounted here -->
						<beans:bean class="org.rdgie.digitalarchive.localfs.LocalFsVolume">
							<beans:property name="name" value="MyFiles" />
							<beans:property name="rootDir" value="/home/john/elfinder" />
						</beans:bean>
						<beans:bean class="org.rdgie.digitalarchive.localfs.LocalFsVolume">
							<beans:property name="name" value="Shared" />
							<beans:property name="rootDir" value="/home/john/elfinder" />
						</beans:bean>
					</beans:list>
				</beans:property>
				<beans:property name="securityChecker">
					<beans:bean class="org.rdgie.digitalarchive.impl.FsSecurityCheckerChain">
						<beans:property name="filterMappings">
							<beans:list>
								<beans:bean class="org.rdgie.digitalarchive.impl.FsSecurityCheckFilterMapping">
									<beans:property name="pattern" value="A_.*" />
									<beans:property name="checker">
										<beans:bean class="org.rdgie.digitalarchive.impl.FsSecurityCheckForAll">
											<beans:property name="readable" value="true" />
											<beans:property name="writable" value="true" />
										</beans:bean>
									</beans:property>
								</beans:bean>
								<beans:bean class="org.rdgie.digitalarchive.impl.FsSecurityCheckFilterMapping">
									<beans:property name="pattern" value="B_.*" />
									<beans:property name="checker">
										<beans:bean class="org.rdgie.digitalarchive.impl.FsSecurityCheckForAll">
											<beans:property name="readable" value="true" />
											<beans:property name="writable" value="false" />
										</beans:bean>
									</beans:property>
								</beans:bean>
							</beans:list>
						</beans:property>
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>
</beans:beans>
